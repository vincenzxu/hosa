<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-autowire="byName" default-lazy-init="false">
	
	

	<bean id="shiroFilter" class="com.mexp.web.service.security.ShiroFilterFactory" >
	    <property name="securityManager" ref="securityManager"/>
	    
	   <property name="loginUrl" value="/webadmin/adminlogin.htm"/>
	    <property name="successUrl" value="/webadmin/main.htm"/>
	    <property name="unauthorizedUrl" value="/common/403.jsp"/> 
	    <!-- -->
		<property name="filters">
	     	<map>
	     		<entry key="roles" value-ref="rolesFilter"/>
	     	</map>
	    </property> 
	     
	   	<property name="filterChainDefinitions" >
	        <value>
	        	 /commons/** = anon
	            /js/** = anon
	            /css/** = anon
	            /img/** = anon
	            /index.jsp = anon
	            /favicon.ico = anon
	            /fonts/** = anon
	            /api/** = anon
	            /webadmin/common/** = anon
	            /webadmin/web/** = anon
	            / = anon
	             /webadmin/login.htm = anon
	            /webadmin/adminlogin.htm = anon
	            
	        </value>
	    </property>
	    
	    <property name="authorityFilter" ref="authorityFilter"/>
	</bean>
	<!-- -->
	<bean id="rolesFilter" class="com.mexp.web.service.security.filter.RolesAuthFilter"/>
	
	<bean id="authorityFilter" class="com.mexp.web.service.security.filter.AuthorityFilter"/>
	
	 
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <property name="realm" ref="authRealm"/>
	  	<property name="sessionManager" ref="sessionManager"/>	
	  	<property name="cacheManager" ref="shiroCacheManager"/>
	</bean>

    <bean id="authRealm" class="com.mexp.web.service.security.realm.AuthRealm" >
        <property name="name" value="authRealm"/>
        <property name="credentialsMatcher" ref="authCredentialsMatcher"/>
        <property name="authorizationCacheName" value="agent.shiro.authorizationCache"/>
        <!-- 授权不使用cache -->
        <property name="authorizationCachingEnabled" value="false"/>
         <property name="authenticationCachingEnabled" value="false"/>
    </bean>
    
    <bean id="authCredentialsMatcher" class="com.mexp.web.service.security.realm.AuthCredentialsMatcher"/>
    
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="1800000"/>
	</bean>
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="globalSessionTimeout" value="86400000"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
    </bean>
    
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="agent-shiro-activeSessionCache"/>
    </bean>
     <!-- 
     <bean id="sessionDAO" class="com.lps.webagent.security.MemCachedSessionDAO">
    </bean>
    -->
    <bean id="shiroCacheManager" class="com.mexp.web.service.security.cache.ShiroMemcachedManager"/>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<!-- Define the Shiro Realm implementation you want to use to connect to your back-end -->
	<!-- security datasource: -->
	
	<!-- -->
	<aop:config proxy-target-class="true"/>
	 
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
</beans>