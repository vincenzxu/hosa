<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="QueueStaff">

	<resultMap id="QueueStaff.RM" type="com.hosa.web.model.QueueStaff">
        <result property="id" column="id"/>        
        <result property="queueId" column="queue_id"/>        
        <result property="staffId" column="staff_id"/>        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="QueueStaff.columns">
	    <![CDATA[
		t_queue_staff.id,t_queue_staff.queue_id,t_queue_staff.staff_id
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="QueueStaff.insert" useGeneratedKeys="true" keyProperty="id">
   
        INSERT INTO t_queue_staff (
	        	id
		     	<if test="@Ognl@isNotNull(queueId)">
		        	,queue_id
		      	</if>
		     	<if test="@Ognl@isNotNull(staffId)">
		        	,staff_id
		      	</if>
        
        ) VALUES (
	        	#{id}
		     	<if test="@Ognl@isNotNull(queueId)">
		        	,#{queueId}
		      	</if>
		     	<if test="@Ognl@isNotNull(staffId)">
		        	,#{staffId}
		      	</if>
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="QueueStaff.update" >
    
        UPDATE t_queue_staff 
			<set>
		        <if test="@Ognl@isNotNull(queueId)">
		        		queue_id = #{queueId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(staffId)">
		        		staff_id = #{staffId},
		        	</if>
		        	
	        </set>
        WHERE 
	        id = #{id} 
   
	</update>

    <delete id="QueueStaff.delete">
    <![CDATA[
        DELETE FROM t_queue_staff 
        WHERE
        id = #{id} 
    ]]>
    </delete>
    <delete id="QueueStaff.deleteByQueueId">
    <![CDATA[
        DELETE FROM t_queue_staff 
        WHERE
        queue_id = #{queueId} 
    ]]>
    </delete>
    <delete id="QueueStaff.deleteMultiple">

        DELETE FROM t_queue_staff 
        WHERE
        	id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="QueueStaff.getById" resultMap="QueueStaff.RM">
		SELECT 
		<include refid="QueueStaff.columns" />
	    <![CDATA[
		    FROM t_queue_staff as t_queue_staff
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="QueueStaff.getByMultipleId" resultMap="QueueStaff.RM">
		SELECT 
		<include refid="QueueStaff.columns" />
		    FROM t_queue_staff as t_queue_staff
	        WHERE 
		       id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="QueueStaff.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND t_queue_staff.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND t_queue_staff.id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND t_queue_staff.id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND t_queue_staff.id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND t_queue_staff.id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND t_queue_staff.id &lt;= #{idLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(idList)">
				AND t_queue_staff.id in
				<foreach collection="idList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(idNotEqList)">
				AND t_queue_staff.id not in
				<foreach collection="idNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(queueId)">
				AND t_queue_staff.queue_id = #{queueId}
			</if>
			<if test="@Ognl@isNotEmpty(queueIdNotEq)">
				AND t_queue_staff.queue_id &lt;&gt; #{queueIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(queueIdGT)">
				AND t_queue_staff.queue_id &gt; #{queueIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(queueIdLT)">
				AND t_queue_staff.queue_id &lt; #{queueIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(queueIdGE)">
				AND t_queue_staff.queue_id &gt;= #{queueIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(queueIdLE)">
				AND t_queue_staff.queue_id &lt;= #{queueIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(queueIdList)">
				AND t_queue_staff.queue_id in
				<foreach collection="queueIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(queueIdNotEqList)">
				AND t_queue_staff.queue_id not in
				<foreach collection="queueIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(staffId)">
				AND t_queue_staff.staff_id = #{staffId}
			</if>
			<if test="@Ognl@isNotEmpty(staffIdNotEq)">
				AND t_queue_staff.staff_id &lt;&gt; #{staffIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(staffIdGT)">
				AND t_queue_staff.staff_id &gt; #{staffIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(staffIdLT)">
				AND t_queue_staff.staff_id &lt; #{staffIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(staffIdGE)">
				AND t_queue_staff.staff_id &gt;= #{staffIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(staffIdLE)">
				AND t_queue_staff.staff_id &lt;= #{staffIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(staffIdList)">
				AND t_queue_staff.staff_id in
				<foreach collection="staffIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(staffIdNotEqList)">
				AND t_queue_staff.staff_id not in
				<foreach collection="staffIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		</where>
	</sql>
		
    <select id="QueueStaff.findPage.count" resultType="long">
        SELECT count(*) FROM t_queue_staff as t_queue_staff 
		<include refid="QueueStaff.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="QueueStaff.findPage" resultMap="QueueStaff.RM">
    	SELECT 
    	<include refid="QueueStaff.columns" />
	    FROM t_queue_staff as t_queue_staff 
		<include refid="QueueStaff.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="QueueStaff.findList" resultMap="QueueStaff.RM">
    	SELECT 
    	<include refid="QueueStaff.columns" />
	     FROM t_queue_staff as t_queue_staff 
		<include refid="QueueStaff.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	
</mapper>

