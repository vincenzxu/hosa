<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="ActivityPrize">

	<resultMap id="ActivityPrize.RM" type="com.hosa.web.model.ActivityPrize">
        <result property="id" column="id"/>        
        <result property="activityId" column="activity_id"/>        
        <result property="prize" column="prize"/>        
        <result property="number" column="number"/>        
        <result property="level" column="level"/>        
        <result property="remainingNumber" column="remaining_number"/>        
        <result property="modified" column="modified"/>        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ActivityPrize.columns">
	    <![CDATA[
		t_activity_prize.id,t_activity_prize.activity_id,t_activity_prize.prize,t_activity_prize.number,t_activity_prize.level,t_activity_prize.remaining_number,t_activity_prize.modified
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="ActivityPrize.insert" useGeneratedKeys="true" keyProperty="id">
   
        INSERT INTO t_activity_prize (
	        	id
		     	<if test="@Ognl@isNotNull(activityId)">
		        	,activity_id
		      	</if>
		     	<if test="@Ognl@isNotNull(prize)">
		        	,prize
		      	</if>
		     	<if test="@Ognl@isNotNull(number)">
		        	,number
		      	</if>
		     	<if test="@Ognl@isNotNull(level)">
		        	,level
		      	</if>
		     	<if test="@Ognl@isNotNull(remainingNumber)">
		        	,remaining_number
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,modified
		      	</if>
        
        ) VALUES (
	        	#{id}
		     	<if test="@Ognl@isNotNull(activityId)">
		        	,#{activityId}
		      	</if>
		     	<if test="@Ognl@isNotNull(prize)">
		        	,#{prize}
		      	</if>
		     	<if test="@Ognl@isNotNull(number)">
		        	,#{number}
		      	</if>
		     	<if test="@Ognl@isNotNull(level)">
		        	,#{level}
		      	</if>
		     	<if test="@Ognl@isNotNull(remainingNumber)">
		        	,#{remainingNumber}
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,#{modified}
		      	</if>
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="ActivityPrize.update" >
    
        UPDATE t_activity_prize 
			<set>
		        <if test="@Ognl@isNotNull(activityId)">
		        		activity_id = #{activityId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(prize)">
		        		prize = #{prize},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(number)">
		        		number = #{number},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(level)">
		        		level = #{level},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(remainingNumber)">
		        		remaining_number = #{remainingNumber},
		        	</if>
		        	
		        	
	        </set>
        WHERE 
	        id = #{id} 
			<if test="@Ognl@isNotNull(modified)">
		      and 
   			modified = #{modified}
		    </if>
   
	</update>

    <delete id="ActivityPrize.delete">
    <![CDATA[
        DELETE FROM t_activity_prize 
        WHERE
        id = #{id} 
    ]]>
    </delete>
    <delete id="ActivityPrize.deleteMultiple">

        DELETE FROM t_activity_prize 
        WHERE
        	id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="ActivityPrize.getById" resultMap="ActivityPrize.RM">
		SELECT 
		<include refid="ActivityPrize.columns" />
	    <![CDATA[
		    FROM t_activity_prize as t_activity_prize
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="ActivityPrize.getByMultipleId" resultMap="ActivityPrize.RM">
		SELECT 
		<include refid="ActivityPrize.columns" />
		    FROM t_activity_prize as t_activity_prize
	        WHERE 
		       id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="ActivityPrize.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND t_activity_prize.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND t_activity_prize.id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND t_activity_prize.id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND t_activity_prize.id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND t_activity_prize.id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND t_activity_prize.id &lt;= #{idLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(idList)">
				AND t_activity_prize.id in
				<foreach collection="idList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(idNotEqList)">
				AND t_activity_prize.id not in
				<foreach collection="idNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(activityId)">
				AND t_activity_prize.activity_id = #{activityId}
			</if>
			<if test="@Ognl@isNotEmpty(activityIdNotEq)">
				AND t_activity_prize.activity_id &lt;&gt; #{activityIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(activityIdGT)">
				AND t_activity_prize.activity_id &gt; #{activityIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(activityIdLT)">
				AND t_activity_prize.activity_id &lt; #{activityIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(activityIdGE)">
				AND t_activity_prize.activity_id &gt;= #{activityIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(activityIdLE)">
				AND t_activity_prize.activity_id &lt;= #{activityIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(activityIdList)">
				AND t_activity_prize.activity_id in
				<foreach collection="activityIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(activityIdNotEqList)">
				AND t_activity_prize.activity_id not in
				<foreach collection="activityIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(prize)">
				AND t_activity_prize.prize = #{prize}
			</if>
			<if test="@Ognl@isNotEmpty(prizeLike)">
				AND t_activity_prize.prize like CONCAT('%', CONVERT(#{prizeLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(prizeBeginLike)">
				AND t_activity_prize.prize like CONCAT('', CONVERT(#{prizeBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(prizeEndLike)">
				AND t_activity_prize.prize like CONCAT('%', CONVERT(#{prizeEndLike}, char) ,'') 
			</if>
			<if test="@Ognl@isNotEmpty(number)">
				AND t_activity_prize.number = #{number}
			</if>
			<if test="@Ognl@isNotEmpty(numberNotEq)">
				AND t_activity_prize.number &lt;&gt; #{numberNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(numberGT)">
				AND t_activity_prize.number &gt; #{numberGT}
			</if>
			<if test="@Ognl@isNotEmpty(numberLT)">
				AND t_activity_prize.number &lt; #{numberLT}
			</if>
			<if test="@Ognl@isNotEmpty(numberGE)">
				AND t_activity_prize.number &gt;= #{numberGE}
			</if>
			<if test="@Ognl@isNotEmpty(numberLE)">
				AND t_activity_prize.number &lt;= #{numberLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(numberList)">
				AND t_activity_prize.number in
				<foreach collection="numberList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(numberNotEqList)">
				AND t_activity_prize.number not in
				<foreach collection="numberNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(level)">
				AND t_activity_prize.level = #{level}
			</if>
			<if test="@Ognl@isNotEmpty(levelNotEq)">
				AND t_activity_prize.level &lt;&gt; #{levelNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(levelGT)">
				AND t_activity_prize.level &gt; #{levelGT}
			</if>
			<if test="@Ognl@isNotEmpty(levelLT)">
				AND t_activity_prize.level &lt; #{levelLT}
			</if>
			<if test="@Ognl@isNotEmpty(levelGE)">
				AND t_activity_prize.level &gt;= #{levelGE}
			</if>
			<if test="@Ognl@isNotEmpty(levelLE)">
				AND t_activity_prize.level &lt;= #{levelLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(levelList)">
				AND t_activity_prize.level in
				<foreach collection="levelList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(levelNotEqList)">
				AND t_activity_prize.level not in
				<foreach collection="levelNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(remainingNumber)">
				AND t_activity_prize.remaining_number = #{remainingNumber}
			</if>
			<if test="@Ognl@isNotEmpty(remainingNumberNotEq)">
				AND t_activity_prize.remaining_number &lt;&gt; #{remainingNumberNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(remainingNumberGT)">
				AND t_activity_prize.remaining_number &gt; #{remainingNumberGT}
			</if>
			<if test="@Ognl@isNotEmpty(remainingNumberLT)">
				AND t_activity_prize.remaining_number &lt; #{remainingNumberLT}
			</if>
			<if test="@Ognl@isNotEmpty(remainingNumberGE)">
				AND t_activity_prize.remaining_number &gt;= #{remainingNumberGE}
			</if>
			<if test="@Ognl@isNotEmpty(remainingNumberLE)">
				AND t_activity_prize.remaining_number &lt;= #{remainingNumberLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(remainingNumberList)">
				AND t_activity_prize.remaining_number in
				<foreach collection="remainingNumberList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(remainingNumberNotEqList)">
				AND t_activity_prize.remaining_number not in
				<foreach collection="remainingNumberNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
	       <if test="@Ognl@isNotEmpty(modifiedBegin)">
				AND t_activity_prize.modified &gt;= #{modifiedBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(modifiedEnd)">
				AND t_activity_prize.modified &lt;= #{modifiedEnd}
		   </if>
		</where>
	</sql>
		
    <select id="ActivityPrize.findPage.count" resultType="long">
        SELECT count(*) FROM t_activity_prize as t_activity_prize 
		<include refid="ActivityPrize.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="ActivityPrize.findPage" resultMap="ActivityPrize.RM">
    	SELECT 
    	<include refid="ActivityPrize.columns" />
	    FROM t_activity_prize as t_activity_prize 
		<include refid="ActivityPrize.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="ActivityPrize.findList" resultMap="ActivityPrize.RM">
    	SELECT 
    	<include refid="ActivityPrize.columns" />
	     FROM t_activity_prize as t_activity_prize 
		<include refid="ActivityPrize.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<update id="ActivityPrize.consumePrize">
		UPDATE
			 t_activity_prize
		SET
			remaining_number = remaining_number -1
		WHERE
			id = #{id}
	
	</update>
	
</mapper>

