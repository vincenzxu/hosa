<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="ActivityMessageResult">

	<resultMap id="ActivityMessageResult.RM" type="com.hosa.web.model.ActivityMessageResult">
        <result property="id" column="id"/>        
        <result property="messageId" column="message_id"/>        
        <result property="msgId" column="msg_id"/>        
        <result property="mediaId" column="media_id"/>        
        <result property="recipient" column="recipient"/>        
        <result property="sendCount" column="send_count"/>        
        <result property="successCount" column="success_count"/>        
        <result property="failureCount" column="failure_count"/>        
        <result property="sendTime" column="send_time"/>        
        <result property="status" column="status"/>        
        <result property="description" column="description"/>        
        <result property="modified" column="modified"/>        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ActivityMessageResult.columns">
	    <![CDATA[
		t_activity_message_result.id,t_activity_message_result.message_id,t_activity_message_result.msg_id,t_activity_message_result.media_id,t_activity_message_result.recipient,t_activity_message_result.send_count,t_activity_message_result.success_count,t_activity_message_result.failure_count,t_activity_message_result.send_time,t_activity_message_result.status,t_activity_message_result.description,t_activity_message_result.modified
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="ActivityMessageResult.insert" useGeneratedKeys="true" keyProperty="id">
   
        INSERT INTO t_activity_message_result (
	        	id
		     	<if test="@Ognl@isNotNull(messageId)">
		        	,message_id
		      	</if>
		     	<if test="@Ognl@isNotNull(msgId)">
		        	,msg_id
		      	</if>
		     	<if test="@Ognl@isNotNull(mediaId)">
		        	,media_id
		      	</if>
		     	<if test="@Ognl@isNotNull(recipient)">
		        	,recipient
		      	</if>
		     	<if test="@Ognl@isNotNull(sendCount)">
		        	,send_count
		      	</if>
		     	<if test="@Ognl@isNotNull(successCount)">
		        	,success_count
		      	</if>
		     	<if test="@Ognl@isNotNull(failureCount)">
		        	,failure_count
		      	</if>
		     	<if test="@Ognl@isNotNull(sendTime)">
		        	,send_time
		      	</if>
		     	<if test="@Ognl@isNotNull(status)">
		        	,status
		      	</if>
		     	<if test="@Ognl@isNotNull(description)">
		        	,description
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,modified
		      	</if>
        
        ) VALUES (
	        	#{id}
		     	<if test="@Ognl@isNotNull(messageId)">
		        	,#{messageId}
		      	</if>
		     	<if test="@Ognl@isNotNull(msgId)">
		        	,#{msgId}
		      	</if>
		     	<if test="@Ognl@isNotNull(mediaId)">
		        	,#{mediaId}
		      	</if>
		     	<if test="@Ognl@isNotNull(recipient)">
		        	,#{recipient}
		      	</if>
		     	<if test="@Ognl@isNotNull(sendCount)">
		        	,#{sendCount}
		      	</if>
		     	<if test="@Ognl@isNotNull(successCount)">
		        	,#{successCount}
		      	</if>
		     	<if test="@Ognl@isNotNull(failureCount)">
		        	,#{failureCount}
		      	</if>
		     	<if test="@Ognl@isNotNull(sendTime)">
		        	,#{sendTime}
		      	</if>
		     	<if test="@Ognl@isNotNull(status)">
		        	,#{status}
		      	</if>
		     	<if test="@Ognl@isNotNull(description)">
		        	,#{description}
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,#{modified}
		      	</if>
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="ActivityMessageResult.update" >
    
        UPDATE t_activity_message_result 
			<set>
		        <if test="@Ognl@isNotNull(messageId)">
		        		message_id = #{messageId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(msgId)">
		        		msg_id = #{msgId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(mediaId)">
		        		media_id = #{mediaId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(recipient)">
		        		recipient = #{recipient},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(sendCount)">
		        		send_count = #{sendCount},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(successCount)">
		        		success_count = #{successCount},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(failureCount)">
		        		failure_count = #{failureCount},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(sendTime)">
		        		send_time = #{sendTime},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(status)">
		        		status = #{status},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(description)">
		        		description = #{description},
		        	</if>
		        	
		        	
	        </set>
        WHERE 
	        id = #{id} 
			<if test="@Ognl@isNotNull(modified)">
		      and 
   			modified = #{modified}
		    </if>
   
	</update>

    <delete id="ActivityMessageResult.delete">
    <![CDATA[
        DELETE FROM t_activity_message_result 
        WHERE
        id = #{id} 
    ]]>
    </delete>
    <delete id="ActivityMessageResult.deleteMultiple">

        DELETE FROM t_activity_message_result 
        WHERE
        	id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="ActivityMessageResult.getById" resultMap="ActivityMessageResult.RM">
		SELECT 
		<include refid="ActivityMessageResult.columns" />
	    <![CDATA[
		    FROM t_activity_message_result as t_activity_message_result
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="ActivityMessageResult.getByMultipleId" resultMap="ActivityMessageResult.RM">
		SELECT 
		<include refid="ActivityMessageResult.columns" />
		    FROM t_activity_message_result as t_activity_message_result
	        WHERE 
		       id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="ActivityMessageResult.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND t_activity_message_result.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND t_activity_message_result.id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND t_activity_message_result.id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND t_activity_message_result.id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND t_activity_message_result.id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND t_activity_message_result.id &lt;= #{idLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(idList)">
				AND t_activity_message_result.id in
				<foreach collection="idList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(idNotEqList)">
				AND t_activity_message_result.id not in
				<foreach collection="idNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(messageId)">
				AND t_activity_message_result.message_id = #{messageId}
			</if>
			<if test="@Ognl@isNotEmpty(messageIdNotEq)">
				AND t_activity_message_result.message_id &lt;&gt; #{messageIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(messageIdGT)">
				AND t_activity_message_result.message_id &gt; #{messageIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(messageIdLT)">
				AND t_activity_message_result.message_id &lt; #{messageIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(messageIdGE)">
				AND t_activity_message_result.message_id &gt;= #{messageIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(messageIdLE)">
				AND t_activity_message_result.message_id &lt;= #{messageIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(messageIdList)">
				AND t_activity_message_result.message_id in
				<foreach collection="messageIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(messageIdNotEqList)">
				AND t_activity_message_result.message_id not in
				<foreach collection="messageIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(msgId)">
				AND t_activity_message_result.msg_id = #{msgId}
			</if>
			<if test="@Ognl@isNotEmpty(msgIdLike)">
				AND t_activity_message_result.msg_id like CONCAT('%', CONVERT(#{msgIdLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(msgIdBeginLike)">
				AND t_activity_message_result.msg_id like CONCAT('', CONVERT(#{msgIdBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(msgIdEndLike)">
				AND t_activity_message_result.msg_id like CONCAT('%', CONVERT(#{msgIdEndLike}, char) ,'') 
			</if>
		   <if test="@Ognl@isNotEmpty(mediaId)">
				AND t_activity_message_result.media_id = #{mediaId}
			</if>
			<if test="@Ognl@isNotEmpty(mediaIdLike)">
				AND t_activity_message_result.media_id like CONCAT('%', CONVERT(#{mediaIdLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(mediaIdBeginLike)">
				AND t_activity_message_result.media_id like CONCAT('', CONVERT(#{mediaIdBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(mediaIdEndLike)">
				AND t_activity_message_result.media_id like CONCAT('%', CONVERT(#{mediaIdEndLike}, char) ,'') 
			</if>
		   <if test="@Ognl@isNotEmpty(recipient)">
				AND t_activity_message_result.recipient = #{recipient}
			</if>
			<if test="@Ognl@isNotEmpty(recipientLike)">
				AND t_activity_message_result.recipient like CONCAT('%', CONVERT(#{recipientLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(recipientBeginLike)">
				AND t_activity_message_result.recipient like CONCAT('', CONVERT(#{recipientBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(recipientEndLike)">
				AND t_activity_message_result.recipient like CONCAT('%', CONVERT(#{recipientEndLike}, char) ,'') 
			</if>
			<if test="@Ognl@isNotEmpty(sendCount)">
				AND t_activity_message_result.send_count = #{sendCount}
			</if>
			<if test="@Ognl@isNotEmpty(sendCountNotEq)">
				AND t_activity_message_result.send_count &lt;&gt; #{sendCountNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(sendCountGT)">
				AND t_activity_message_result.send_count &gt; #{sendCountGT}
			</if>
			<if test="@Ognl@isNotEmpty(sendCountLT)">
				AND t_activity_message_result.send_count &lt; #{sendCountLT}
			</if>
			<if test="@Ognl@isNotEmpty(sendCountGE)">
				AND t_activity_message_result.send_count &gt;= #{sendCountGE}
			</if>
			<if test="@Ognl@isNotEmpty(sendCountLE)">
				AND t_activity_message_result.send_count &lt;= #{sendCountLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(sendCountList)">
				AND t_activity_message_result.send_count in
				<foreach collection="sendCountList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(sendCountNotEqList)">
				AND t_activity_message_result.send_count not in
				<foreach collection="sendCountNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(successCount)">
				AND t_activity_message_result.success_count = #{successCount}
			</if>
			<if test="@Ognl@isNotEmpty(successCountNotEq)">
				AND t_activity_message_result.success_count &lt;&gt; #{successCountNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(successCountGT)">
				AND t_activity_message_result.success_count &gt; #{successCountGT}
			</if>
			<if test="@Ognl@isNotEmpty(successCountLT)">
				AND t_activity_message_result.success_count &lt; #{successCountLT}
			</if>
			<if test="@Ognl@isNotEmpty(successCountGE)">
				AND t_activity_message_result.success_count &gt;= #{successCountGE}
			</if>
			<if test="@Ognl@isNotEmpty(successCountLE)">
				AND t_activity_message_result.success_count &lt;= #{successCountLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(successCountList)">
				AND t_activity_message_result.success_count in
				<foreach collection="successCountList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(successCountNotEqList)">
				AND t_activity_message_result.success_count not in
				<foreach collection="successCountNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(failureCount)">
				AND t_activity_message_result.failure_count = #{failureCount}
			</if>
			<if test="@Ognl@isNotEmpty(failureCountNotEq)">
				AND t_activity_message_result.failure_count &lt;&gt; #{failureCountNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(failureCountGT)">
				AND t_activity_message_result.failure_count &gt; #{failureCountGT}
			</if>
			<if test="@Ognl@isNotEmpty(failureCountLT)">
				AND t_activity_message_result.failure_count &lt; #{failureCountLT}
			</if>
			<if test="@Ognl@isNotEmpty(failureCountGE)">
				AND t_activity_message_result.failure_count &gt;= #{failureCountGE}
			</if>
			<if test="@Ognl@isNotEmpty(failureCountLE)">
				AND t_activity_message_result.failure_count &lt;= #{failureCountLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(failureCountList)">
				AND t_activity_message_result.failure_count in
				<foreach collection="failureCountList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(failureCountNotEqList)">
				AND t_activity_message_result.failure_count not in
				<foreach collection="failureCountNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
	       <if test="@Ognl@isNotEmpty(sendTimeBegin)">
				AND t_activity_message_result.send_time &gt;= #{sendTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(sendTimeEnd)">
				AND t_activity_message_result.send_time &lt;= #{sendTimeEnd}
		   </if>
			<if test="@Ognl@isNotEmpty(status)">
				AND t_activity_message_result.status = #{status}
			</if>
			<if test="@Ognl@isNotEmpty(statusNotEq)">
				AND t_activity_message_result.status &lt;&gt; #{statusNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(statusGT)">
				AND t_activity_message_result.status &gt; #{statusGT}
			</if>
			<if test="@Ognl@isNotEmpty(statusLT)">
				AND t_activity_message_result.status &lt; #{statusLT}
			</if>
			<if test="@Ognl@isNotEmpty(statusGE)">
				AND t_activity_message_result.status &gt;= #{statusGE}
			</if>
			<if test="@Ognl@isNotEmpty(statusLE)">
				AND t_activity_message_result.status &lt;= #{statusLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(statusList)">
				AND t_activity_message_result.status in
				<foreach collection="statusList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(statusNotEqList)">
				AND t_activity_message_result.status not in
				<foreach collection="statusNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(description)">
				AND t_activity_message_result.description = #{description}
			</if>
			<if test="@Ognl@isNotEmpty(descriptionLike)">
				AND t_activity_message_result.description like CONCAT('%', CONVERT(#{descriptionLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(descriptionBeginLike)">
				AND t_activity_message_result.description like CONCAT('', CONVERT(#{descriptionBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(descriptionEndLike)">
				AND t_activity_message_result.description like CONCAT('%', CONVERT(#{descriptionEndLike}, char) ,'') 
			</if>
	       <if test="@Ognl@isNotEmpty(modifiedBegin)">
				AND t_activity_message_result.modified &gt;= #{modifiedBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(modifiedEnd)">
				AND t_activity_message_result.modified &lt;= #{modifiedEnd}
		   </if>
		</where>
	</sql>
		
    <select id="ActivityMessageResult.findPage.count" resultType="long">
        SELECT count(*) FROM t_activity_message_result as t_activity_message_result 
		<include refid="ActivityMessageResult.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="ActivityMessageResult.findPage" resultMap="ActivityMessageResult.RM">
    	SELECT 
    	<include refid="ActivityMessageResult.columns" />
	    FROM t_activity_message_result as t_activity_message_result 
		<include refid="ActivityMessageResult.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="ActivityMessageResult.findList" resultMap="ActivityMessageResult.RM">
    	SELECT 
    	<include refid="ActivityMessageResult.columns" />
	     FROM t_activity_message_result as t_activity_message_result 
		<include refid="ActivityMessageResult.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

    <select id="ActivityMessageResult.getByMsgId" resultMap="ActivityMessageResult.RM" parameterType="java.lang.String">
	    SELECT 
	    <include refid="ActivityMessageResult.columns"/>
	    <![CDATA[
	        FROM t_activity_message_result as t_activity_message_result  where t_activity_message_result.msg_id = #{msgId}
	    ]]>
    </select>
    
	
	
</mapper>

