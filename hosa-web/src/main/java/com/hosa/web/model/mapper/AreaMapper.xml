<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Area">

	<resultMap id="Area.RM" type="com.hosa.web.model.Area">
        <result property="code" column="code"/>        
        <result property="name" column="name"/>        
        <result property="fullName" column="full_name"/>        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Area.columns">
	    <![CDATA[
		t_area.code,t_area.name,t_area.full_name
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="Area.insert" useGeneratedKeys="true" keyProperty="code">
   
        INSERT INTO t_area (
	        	code
		     	<if test="@Ognl@isNotNull(name)">
		        	,name
		      	</if>
		     	<if test="@Ognl@isNotNull(fullName)">
		        	,full_name
		      	</if>
        
        ) VALUES (
	        	#{code}
		     	<if test="@Ognl@isNotNull(name)">
		        	,#{name}
		      	</if>
		     	<if test="@Ognl@isNotNull(fullName)">
		        	,#{fullName}
		      	</if>
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="Area.update" >
    
        UPDATE t_area 
			<set>
		        <if test="@Ognl@isNotNull(name)">
		        		name = #{name},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(fullName)">
		        		full_name = #{fullName},
		        	</if>
		        	
	        </set>
        WHERE 
	        code = #{code} 
   
	</update>

    <delete id="Area.delete">
    <![CDATA[
        DELETE FROM t_area 
        WHERE
        code = #{id} 
    ]]>
    </delete>
    <delete id="Area.deleteMultiple">

        DELETE FROM t_area 
        WHERE
        	code in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="Area.getById" resultMap="Area.RM">
		SELECT 
		<include refid="Area.columns" />
	    <![CDATA[
		    FROM t_area as t_area
	        WHERE 
		        code = #{id} 
	    ]]>
	</select>
	
	<select id="Area.getByMultipleId" resultMap="Area.RM">
		SELECT 
		<include refid="Area.columns" />
		    FROM t_area as t_area
	        WHERE 
		       code in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="Area.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
		   <if test="@Ognl@isNotEmpty(code)">
				AND t_area.code = #{code}
			</if>
			<if test="@Ognl@isNotEmpty(codeLike)">
				AND t_area.code like CONCAT('%', CONVERT(#{codeLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(codeBeginLike)">
				AND t_area.code like CONCAT('', CONVERT(#{codeBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(codeEndLike)">
				AND t_area.code like CONCAT('%', CONVERT(#{codeEndLike}, char) ,'') 
			</if>
		   <if test="@Ognl@isNotEmpty(name)">
				AND t_area.name = #{name}
			</if>
			<if test="@Ognl@isNotEmpty(nameLike)">
				AND t_area.name like CONCAT('%', CONVERT(#{nameLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(nameBeginLike)">
				AND t_area.name like CONCAT('', CONVERT(#{nameBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(nameEndLike)">
				AND t_area.name like CONCAT('%', CONVERT(#{nameEndLike}, char) ,'') 
			</if>
		   <if test="@Ognl@isNotEmpty(fullName)">
				AND t_area.full_name = #{fullName}
			</if>
			<if test="@Ognl@isNotEmpty(fullNameLike)">
				AND t_area.full_name like CONCAT('%', CONVERT(#{fullNameLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(fullNameBeginLike)">
				AND t_area.full_name like CONCAT('', CONVERT(#{fullNameBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(fullNameEndLike)">
				AND t_area.full_name like CONCAT('%', CONVERT(#{fullNameEndLike}, char) ,'') 
			</if>
		</where>
	</sql>
		
    <select id="Area.findPage.count" resultType="long">
        SELECT count(*) FROM t_area as t_area 
		<include refid="Area.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Area.findPage" resultMap="Area.RM">
    	SELECT 
    	<include refid="Area.columns" />
	    FROM t_area as t_area 
		<include refid="Area.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="Area.findList" resultMap="Area.RM">
    	SELECT 
    	<include refid="Area.columns" />
	     FROM t_area as t_area 
		<include refid="Area.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	
</mapper>

