<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Authority">

	<resultMap id="Authority.RM" type="com.hosa.web.model.Authority">
        <result property="id" column="id"/>        
        <result property="name" column="name"/>        
        <result property="mark" column="mark"/>        
        <result property="chain" column="chain"/>        
        <result property="sort" column="sort"/>        
        <result property="level" column="level"/>        
        <result property="custom" column="custom"/>        
        <result property="modified" column="modified"/>        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Authority.columns">
	    <![CDATA[
		t_authority.id,t_authority.name,t_authority.mark,t_authority.chain,t_authority.sort,t_authority.level,t_authority.custom,t_authority.modified
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="Authority.insert" useGeneratedKeys="true" keyProperty="id">
   
        INSERT INTO t_authority (
	        	id
		     	<if test="@Ognl@isNotNull(name)">
		        	,name
		      	</if>
		     	<if test="@Ognl@isNotNull(mark)">
		        	,mark
		      	</if>
		     	<if test="@Ognl@isNotNull(chain)">
		        	,chain
		      	</if>
		     	<if test="@Ognl@isNotNull(sort)">
		        	,sort
		      	</if>
		     	<if test="@Ognl@isNotNull(level)">
		        	,level
		      	</if>
		     	<if test="@Ognl@isNotNull(custom)">
		        	,custom
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,modified
		      	</if>
        
        ) VALUES (
	        	#{id}
		     	<if test="@Ognl@isNotNull(name)">
		        	,#{name}
		      	</if>
		     	<if test="@Ognl@isNotNull(mark)">
		        	,#{mark}
		      	</if>
		     	<if test="@Ognl@isNotNull(chain)">
		        	,#{chain}
		      	</if>
		     	<if test="@Ognl@isNotNull(sort)">
		        	,#{sort}
		      	</if>
		     	<if test="@Ognl@isNotNull(level)">
		        	,#{level}
		      	</if>
		     	<if test="@Ognl@isNotNull(custom)">
		        	,#{custom}
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,#{modified}
		      	</if>
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="Authority.update" >
    
        UPDATE t_authority 
			<set>
		        <if test="@Ognl@isNotNull(name)">
		        		name = #{name},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(mark)">
		        		mark = #{mark},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(chain)">
		        		chain = #{chain},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(sort)">
		        		sort = #{sort},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(level)">
		        		level = #{level},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(custom)">
		        		custom = #{custom},
		        	</if>
		        	
		        	
	        </set>
        WHERE 
	        id = #{id} 
			<if test="@Ognl@isNotNull(modified)">
		      and 
   			modified = #{modified}
		    </if>
   
	</update>

    <delete id="Authority.delete">
    <![CDATA[
        DELETE FROM t_authority 
        WHERE
        id = #{id} 
    ]]>
    </delete>
    <delete id="Authority.deleteMultiple">

        DELETE FROM t_authority 
        WHERE
        	id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="Authority.getById" resultMap="Authority.RM">
		SELECT 
		<include refid="Authority.columns" />
	    <![CDATA[
		    FROM t_authority as t_authority
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="Authority.getByMultipleId" resultMap="Authority.RM">
		SELECT 
		<include refid="Authority.columns" />
		    FROM t_authority as t_authority
	        WHERE 
		       id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="Authority.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND t_authority.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND t_authority.id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND t_authority.id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND t_authority.id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND t_authority.id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND t_authority.id &lt;= #{idLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(idList)">
				AND t_authority.id in
				<foreach collection="idList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(idNotEqList)">
				AND t_authority.id not in
				<foreach collection="idNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(name)">
				AND t_authority.name = #{name}
			</if>
			<if test="@Ognl@isNotEmpty(nameLike)">
				AND t_authority.name like CONCAT('%', CONVERT(#{nameLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(nameBeginLike)">
				AND t_authority.name like CONCAT('', CONVERT(#{nameBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(nameEndLike)">
				AND t_authority.name like CONCAT('%', CONVERT(#{nameEndLike}, char) ,'') 
			</if>
		   <if test="@Ognl@isNotEmpty(mark)">
				AND t_authority.mark = #{mark}
			</if>
			<if test="@Ognl@isNotEmpty(markLike)">
				AND t_authority.mark like CONCAT('%', CONVERT(#{markLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(markBeginLike)">
				AND t_authority.mark like CONCAT('', CONVERT(#{markBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(markEndLike)">
				AND t_authority.mark like CONCAT('%', CONVERT(#{markEndLike}, char) ,'') 
			</if>
		   <if test="@Ognl@isNotEmpty(chain)">
				AND t_authority.chain = #{chain}
			</if>
			<if test="@Ognl@isNotEmpty(chainLike)">
				AND t_authority.chain like CONCAT('%', CONVERT(#{chainLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(chainBeginLike)">
				AND t_authority.chain like CONCAT('', CONVERT(#{chainBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(chainEndLike)">
				AND t_authority.chain like CONCAT('%', CONVERT(#{chainEndLike}, char) ,'') 
			</if>
			<if test="@Ognl@isNotEmpty(sort)">
				AND t_authority.sort = #{sort}
			</if>
			<if test="@Ognl@isNotEmpty(sortNotEq)">
				AND t_authority.sort &lt;&gt; #{sortNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(sortGT)">
				AND t_authority.sort &gt; #{sortGT}
			</if>
			<if test="@Ognl@isNotEmpty(sortLT)">
				AND t_authority.sort &lt; #{sortLT}
			</if>
			<if test="@Ognl@isNotEmpty(sortGE)">
				AND t_authority.sort &gt;= #{sortGE}
			</if>
			<if test="@Ognl@isNotEmpty(sortLE)">
				AND t_authority.sort &lt;= #{sortLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(sortList)">
				AND t_authority.sort in
				<foreach collection="sortList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(sortNotEqList)">
				AND t_authority.sort not in
				<foreach collection="sortNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(level)">
				AND t_authority.level = #{level}
			</if>
			<if test="@Ognl@isNotEmpty(levelNotEq)">
				AND t_authority.level &lt;&gt; #{levelNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(levelGT)">
				AND t_authority.level &gt; #{levelGT}
			</if>
			<if test="@Ognl@isNotEmpty(levelLT)">
				AND t_authority.level &lt; #{levelLT}
			</if>
			<if test="@Ognl@isNotEmpty(levelGE)">
				AND t_authority.level &gt;= #{levelGE}
			</if>
			<if test="@Ognl@isNotEmpty(levelLE)">
				AND t_authority.level &lt;= #{levelLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(levelList)">
				AND t_authority.level in
				<foreach collection="levelList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(levelNotEqList)">
				AND t_authority.level not in
				<foreach collection="levelNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(custom)">
				AND t_authority.custom = #{custom}
			</if>
			<if test="@Ognl@isNotEmpty(customNotEq)">
				AND t_authority.custom &lt;&gt; #{customNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(customGT)">
				AND t_authority.custom &gt; #{customGT}
			</if>
			<if test="@Ognl@isNotEmpty(customLT)">
				AND t_authority.custom &lt; #{customLT}
			</if>
			<if test="@Ognl@isNotEmpty(customGE)">
				AND t_authority.custom &gt;= #{customGE}
			</if>
			<if test="@Ognl@isNotEmpty(customLE)">
				AND t_authority.custom &lt;= #{customLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(customList)">
				AND t_authority.custom in
				<foreach collection="customList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(customNotEqList)">
				AND t_authority.custom not in
				<foreach collection="customNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
	       <if test="@Ognl@isNotEmpty(modifiedBegin)">
				AND t_authority.modified &gt;= #{modifiedBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(modifiedEnd)">
				AND t_authority.modified &lt;= #{modifiedEnd}
		   </if>
		</where>
	</sql>
		
    <select id="Authority.findPage.count" resultType="long">
        SELECT count(*) FROM t_authority as t_authority 
		<include refid="Authority.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Authority.findPage" resultMap="Authority.RM">
    	SELECT 
    	<include refid="Authority.columns" />
	    FROM t_authority as t_authority 
		<include refid="Authority.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="Authority.findList" resultMap="Authority.RM">
    	SELECT 
    	<include refid="Authority.columns" />
	     FROM t_authority as t_authority 
		<include refid="Authority.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

    <select id="Authority.getByMark" resultMap="Authority.RM" parameterType="java.lang.String">
	    SELECT 
	    <include refid="Authority.columns"/>
	    <![CDATA[
	        FROM t_authority as t_authority  where t_authority.mark = #{mark}
	    ]]>
    </select>
    
	
	<!-- custom -->
	<select id="Authority.findListByStaffId" resultMap="Authority.RM">
    	SELECT <include refid="Authority.columns" />
	     FROM t_authority as t_authority 
	     , t_role_authority_relation as t_role_authority_relation
	     , t_staff_role_relation as t_staff_role_relation
		where
			t_authority.id = t_role_authority_relation.authority_id
			and t_staff_role_relation.role_id = t_role_authority_relation.role_id
			and t_staff_role_relation.staff_id = ${staffId}
		order by
			t_authority.sort asc
    </select>
</mapper>

