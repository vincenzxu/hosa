<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="InboundMenu">

	<resultMap id="InboundMenu.RM" type="com.mexp.web.model.InboundMenu">
        <result property="id" column="id"/>        
        <result property="departmentId" column="department_id"/>        
        <result property="name" column="name"/>        
        <result property="level" column="level"/>        
        <result property="expanded" column="expanded"/>        
        <result property="parentId" column="parent_id"/>        
        <result property="keyword" column="keyword"/>        
        <result property="type" column="type"/>        
        <result property="clickCount" column="click_count"/>        
        <result property="materialId" column="material_id"/>        
        <result property="modified" column="modified"/>        
        <result property="sort" column="sort"/>        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="InboundMenu.columns">
	    <![CDATA[
		t_inbound_menu.id,t_inbound_menu.department_id,t_inbound_menu.name,t_inbound_menu.level,t_inbound_menu.expanded,t_inbound_menu.parent_id,t_inbound_menu.keyword,t_inbound_menu.type,t_inbound_menu.click_count,t_inbound_menu.material_id,t_inbound_menu.modified,t_inbound_menu.sort
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="InboundMenu.insert" useGeneratedKeys="true" keyProperty="id">
   
        INSERT INTO t_inbound_menu (
	        	id
		     	<if test="@Ognl@isNotNull(departmentId)">
		        	,department_id
		      	</if>
		     	<if test="@Ognl@isNotNull(name)">
		        	,name
		      	</if>
		     	<if test="@Ognl@isNotNull(level)">
		        	,level
		      	</if>
		     	<if test="@Ognl@isNotNull(expanded)">
		        	,expanded
		      	</if>
		     	<if test="@Ognl@isNotNull(parentId)">
		        	,parent_id
		      	</if>
		     	<if test="@Ognl@isNotNull(keyword)">
		        	,keyword
		      	</if>
		     	<if test="@Ognl@isNotNull(type)">
		        	,type
		      	</if>
		     	<if test="@Ognl@isNotNull(clickCount)">
		        	,click_count
		      	</if>
		     	<if test="@Ognl@isNotNull(materialId)">
		        	,material_id
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,modified
		      	</if>
		     	,sort
		      	
        
        ) select 
	        	#{id}
		     	<if test="@Ognl@isNotNull(departmentId)">
		        	,#{departmentId}
		      	</if>
		     	<if test="@Ognl@isNotNull(name)">
		        	,#{name}
		      	</if>
		     	<if test="@Ognl@isNotNull(level)">
		        	,#{level}
		      	</if>
		     	<if test="@Ognl@isNotNull(expanded)">
		        	,#{expanded}
		      	</if>
		     	<if test="@Ognl@isNotNull(parentId)">
		        	,#{parentId}
		      	</if>
		     	<if test="@Ognl@isNotNull(keyword)">
		        	,#{keyword}
		      	</if>
		     	<if test="@Ognl@isNotNull(type)">
		        	,#{type}
		      	</if>
		     	<if test="@Ognl@isNotNull(clickCount)">
		        	,#{clickCount}
		      	</if>
		     	<if test="@Ognl@isNotNull(materialId)">
		        	,#{materialId}
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,#{modified}
		      	</if>
		     	
		        	,count(*)+1 
		      	
		      	 from t_inbound_menu tt where tt.parent_id=#{parentId}
		      	
        
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="InboundMenu.update" >
    
        UPDATE t_inbound_menu 
			<set>
		        <if test="@Ognl@isNotNull(departmentId)">
		        		department_id = #{departmentId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(name)">
		        		name = #{name},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(level)">
		        		level = #{level},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(expanded)">
		        		expanded = #{expanded},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(parentId)">
		        		parent_id = #{parentId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(keyword)">
		        		keyword = #{keyword},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(type)">
		        		type = #{type},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(clickCount)">
		        		click_count = #{clickCount},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(materialId)">
		        		material_id = #{materialId},
		        	</if>
		        	
		        	
		        <if test="@Ognl@isNotNull(sort)">
		        		sort = #{sort},
		        	</if>
		        	
	        </set>
        WHERE 
	        id = #{id} 
			<if test="@Ognl@isNotNull(modified)">
		      and 
   			modified = #{modified}
		    </if>
   
	</update>

    <delete id="InboundMenu.delete">
    <![CDATA[
        DELETE FROM t_inbound_menu 
        WHERE
        id = #{id} 
    ]]>
    </delete>
    <delete id="InboundMenu.deleteMultiple">

        DELETE FROM t_inbound_menu 
        WHERE
        	id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="InboundMenu.getById" resultMap="InboundMenu.RM">
		SELECT 
		<include refid="InboundMenu.columns" />
	    <![CDATA[
		    FROM t_inbound_menu as t_inbound_menu
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="InboundMenu.getByMultipleId" resultMap="InboundMenu.RM">
		SELECT 
		<include refid="InboundMenu.columns" />
		    FROM t_inbound_menu as t_inbound_menu
	        WHERE 
		       id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="InboundMenu.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND t_inbound_menu.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND t_inbound_menu.id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND t_inbound_menu.id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND t_inbound_menu.id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND t_inbound_menu.id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND t_inbound_menu.id &lt;= #{idLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(idList)">
				AND t_inbound_menu.id in
				<foreach collection="idList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(idNotEqList)">
				AND t_inbound_menu.id not in
				<foreach collection="idNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(departmentId)">
				AND t_inbound_menu.department_id = #{departmentId}
			</if>
			<if test="@Ognl@isNotEmpty(departmentIdNotEq)">
				AND t_inbound_menu.department_id &lt;&gt; #{departmentIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(departmentIdGT)">
				AND t_inbound_menu.department_id &gt; #{departmentIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(departmentIdLT)">
				AND t_inbound_menu.department_id &lt; #{departmentIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(departmentIdGE)">
				AND t_inbound_menu.department_id &gt;= #{departmentIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(departmentIdLE)">
				AND t_inbound_menu.department_id &lt;= #{departmentIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(departmentIdList)">
				AND t_inbound_menu.department_id in
				<foreach collection="departmentIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(departmentIdNotEqList)">
				AND t_inbound_menu.department_id not in
				<foreach collection="departmentIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(name)">
				AND t_inbound_menu.name = #{name}
			</if>
			<if test="@Ognl@isNotEmpty(nameLike)">
				AND t_inbound_menu.name like CONCAT('%', CONVERT(#{nameLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(nameBeginLike)">
				AND t_inbound_menu.name like CONCAT('', CONVERT(#{nameBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(nameEndLike)">
				AND t_inbound_menu.name like CONCAT('%', CONVERT(#{nameEndLike}, char) ,'') 
			</if>
			<if test="@Ognl@isNotEmpty(level)">
				AND t_inbound_menu.level = #{level}
			</if>
			<if test="@Ognl@isNotEmpty(levelNotEq)">
				AND t_inbound_menu.level &lt;&gt; #{levelNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(levelGT)">
				AND t_inbound_menu.level &gt; #{levelGT}
			</if>
			<if test="@Ognl@isNotEmpty(levelLT)">
				AND t_inbound_menu.level &lt; #{levelLT}
			</if>
			<if test="@Ognl@isNotEmpty(levelGE)">
				AND t_inbound_menu.level &gt;= #{levelGE}
			</if>
			<if test="@Ognl@isNotEmpty(levelLE)">
				AND t_inbound_menu.level &lt;= #{levelLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(levelList)">
				AND t_inbound_menu.level in
				<foreach collection="levelList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(levelNotEqList)">
				AND t_inbound_menu.level not in
				<foreach collection="levelNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(expanded)">
				AND t_inbound_menu.expanded = #{expanded}
			</if>
			<if test="@Ognl@isNotEmpty(expandedNotEq)">
				AND t_inbound_menu.expanded &lt;&gt; #{expandedNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(expandedGT)">
				AND t_inbound_menu.expanded &gt; #{expandedGT}
			</if>
			<if test="@Ognl@isNotEmpty(expandedLT)">
				AND t_inbound_menu.expanded &lt; #{expandedLT}
			</if>
			<if test="@Ognl@isNotEmpty(expandedGE)">
				AND t_inbound_menu.expanded &gt;= #{expandedGE}
			</if>
			<if test="@Ognl@isNotEmpty(expandedLE)">
				AND t_inbound_menu.expanded &lt;= #{expandedLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(expandedList)">
				AND t_inbound_menu.expanded in
				<foreach collection="expandedList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(expandedNotEqList)">
				AND t_inbound_menu.expanded not in
				<foreach collection="expandedNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(parentId)">
				AND t_inbound_menu.parent_id = #{parentId}
			</if>
			<if test="@Ognl@isNotEmpty(parentIdNotEq)">
				AND t_inbound_menu.parent_id &lt;&gt; #{parentIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(parentIdGT)">
				AND t_inbound_menu.parent_id &gt; #{parentIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(parentIdLT)">
				AND t_inbound_menu.parent_id &lt; #{parentIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(parentIdGE)">
				AND t_inbound_menu.parent_id &gt;= #{parentIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(parentIdLE)">
				AND t_inbound_menu.parent_id &lt;= #{parentIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(parentIdList)">
				AND t_inbound_menu.parent_id in
				<foreach collection="parentIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(parentIdNotEqList)">
				AND t_inbound_menu.parent_id not in
				<foreach collection="parentIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(keyword)">
				AND t_inbound_menu.keyword = #{keyword}
			</if>
			<if test="@Ognl@isNotEmpty(keywordNotEq)">
				AND t_inbound_menu.keyword &lt;&gt; #{keywordNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(keywordGT)">
				AND t_inbound_menu.keyword &gt; #{keywordGT}
			</if>
			<if test="@Ognl@isNotEmpty(keywordLT)">
				AND t_inbound_menu.keyword &lt; #{keywordLT}
			</if>
			<if test="@Ognl@isNotEmpty(keywordGE)">
				AND t_inbound_menu.keyword &gt;= #{keywordGE}
			</if>
			<if test="@Ognl@isNotEmpty(keywordLE)">
				AND t_inbound_menu.keyword &lt;= #{keywordLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(keywordList)">
				AND t_inbound_menu.keyword in
				<foreach collection="keywordList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(keywordNotEqList)">
				AND t_inbound_menu.keyword not in
				<foreach collection="keywordNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(type)">
				AND t_inbound_menu.type = #{type}
			</if>
			<if test="@Ognl@isNotEmpty(typeNotEq)">
				AND t_inbound_menu.type &lt;&gt; #{typeNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(typeGT)">
				AND t_inbound_menu.type &gt; #{typeGT}
			</if>
			<if test="@Ognl@isNotEmpty(typeLT)">
				AND t_inbound_menu.type &lt; #{typeLT}
			</if>
			<if test="@Ognl@isNotEmpty(typeGE)">
				AND t_inbound_menu.type &gt;= #{typeGE}
			</if>
			<if test="@Ognl@isNotEmpty(typeLE)">
				AND t_inbound_menu.type &lt;= #{typeLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(typeList)">
				AND t_inbound_menu.type in
				<foreach collection="typeList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(typeNotEqList)">
				AND t_inbound_menu.type not in
				<foreach collection="typeNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(clickCount)">
				AND t_inbound_menu.click_count = #{clickCount}
			</if>
			<if test="@Ognl@isNotEmpty(clickCountNotEq)">
				AND t_inbound_menu.click_count &lt;&gt; #{clickCountNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(clickCountGT)">
				AND t_inbound_menu.click_count &gt; #{clickCountGT}
			</if>
			<if test="@Ognl@isNotEmpty(clickCountLT)">
				AND t_inbound_menu.click_count &lt; #{clickCountLT}
			</if>
			<if test="@Ognl@isNotEmpty(clickCountGE)">
				AND t_inbound_menu.click_count &gt;= #{clickCountGE}
			</if>
			<if test="@Ognl@isNotEmpty(clickCountLE)">
				AND t_inbound_menu.click_count &lt;= #{clickCountLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(clickCountList)">
				AND t_inbound_menu.click_count in
				<foreach collection="clickCountList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(clickCountNotEqList)">
				AND t_inbound_menu.click_count not in
				<foreach collection="clickCountNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(materialId)">
				AND t_inbound_menu.material_id = #{materialId}
			</if>
			<if test="@Ognl@isNotEmpty(materialIdNotEq)">
				AND t_inbound_menu.material_id &lt;&gt; #{materialIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(materialIdGT)">
				AND t_inbound_menu.material_id &gt; #{materialIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(materialIdLT)">
				AND t_inbound_menu.material_id &lt; #{materialIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(materialIdGE)">
				AND t_inbound_menu.material_id &gt;= #{materialIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(materialIdLE)">
				AND t_inbound_menu.material_id &lt;= #{materialIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(materialIdList)">
				AND t_inbound_menu.material_id in
				<foreach collection="materialIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(materialIdNotEqList)">
				AND t_inbound_menu.material_id not in
				<foreach collection="materialIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
	       <if test="@Ognl@isNotEmpty(modifiedBegin)">
				AND t_inbound_menu.modified &gt;= #{modifiedBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(modifiedEnd)">
				AND t_inbound_menu.modified &lt;= #{modifiedEnd}
		   </if>
			<if test="@Ognl@isNotEmpty(sort)">
				AND t_inbound_menu.sort = #{sort}
			</if>
			<if test="@Ognl@isNotEmpty(sortNotEq)">
				AND t_inbound_menu.sort &lt;&gt; #{sortNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(sortGT)">
				AND t_inbound_menu.sort &gt; #{sortGT}
			</if>
			<if test="@Ognl@isNotEmpty(sortLT)">
				AND t_inbound_menu.sort &lt; #{sortLT}
			</if>
			<if test="@Ognl@isNotEmpty(sortGE)">
				AND t_inbound_menu.sort &gt;= #{sortGE}
			</if>
			<if test="@Ognl@isNotEmpty(sortLE)">
				AND t_inbound_menu.sort &lt;= #{sortLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(sortList)">
				AND t_inbound_menu.sort in
				<foreach collection="sortList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(sortNotEqList)">
				AND t_inbound_menu.sort not in
				<foreach collection="sortNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		</where>
	</sql>
		
    <select id="InboundMenu.findPage.count" resultType="long">
        SELECT count(*) FROM t_inbound_menu as t_inbound_menu 
		<include refid="InboundMenu.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="InboundMenu.findPage" resultMap="InboundMenu.RM">
    	SELECT 
    	<include refid="InboundMenu.columns" />
	    FROM t_inbound_menu as t_inbound_menu 
		<include refid="InboundMenu.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="InboundMenu.findList" resultMap="InboundMenu.RM">
    	SELECT 
    	<include refid="InboundMenu.columns" />
	     FROM t_inbound_menu as t_inbound_menu 
		<include refid="InboundMenu.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <update id="InboundMenu.updateUpSort">
    	update t_inbound_menu set sort=sort+1 where parent_id=#{parentId} and sort>=#{sort}
    </update>

	<update id="InboundMenu.updateDownSort">
    	update t_inbound_menu set sort=sort-1 where parent_id=#{parentId} and sort>#{sort}
    </update>
	
</mapper>

