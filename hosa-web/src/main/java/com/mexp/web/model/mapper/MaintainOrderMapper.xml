<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="MaintainOrder">

	<resultMap id="MaintainOrder.RM" type="com.mexp.web.model.MaintainOrder">
        <result property="id" column="id"/>        
        <result property="userId" column="user_id"/>        
        <result property="appointmentTime" column="appointment_time"/>        
        <result property="description" column="description"/>        
        <result property="status" column="status"/>        
        <result property="modified" column="modified"/>        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="MaintainOrder.columns">
	    <![CDATA[
		t_maintain_order.id,t_maintain_order.user_id,t_maintain_order.appointment_time,t_maintain_order.description,t_maintain_order.status,t_maintain_order.modified
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="MaintainOrder.insert" useGeneratedKeys="true" keyProperty="id">
   
        INSERT INTO t_maintain_order (
	        	id
		     	<if test="@Ognl@isNotNull(userId)">
		        	,user_id
		      	</if>
		     	<if test="@Ognl@isNotNull(appointmentTime)">
		        	,appointment_time
		      	</if>
		     	<if test="@Ognl@isNotNull(description)">
		        	,description
		      	</if>
		     	<if test="@Ognl@isNotNull(status)">
		        	,status
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,modified
		      	</if>
        
        ) VALUES (
	        	#{id}
		     	<if test="@Ognl@isNotNull(userId)">
		        	,#{userId}
		      	</if>
		     	<if test="@Ognl@isNotNull(appointmentTime)">
		        	,#{appointmentTime}
		      	</if>
		     	<if test="@Ognl@isNotNull(description)">
		        	,#{description}
		      	</if>
		     	<if test="@Ognl@isNotNull(status)">
		        	,#{status}
		      	</if>
		     	<if test="@Ognl@isNotNull(modified)">
		        	,#{modified}
		      	</if>
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="MaintainOrder.update" >
    
        UPDATE t_maintain_order 
			<set>
		        <if test="@Ognl@isNotNull(userId)">
		        		user_id = #{userId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(appointmentTime)">
		        		appointment_time = #{appointmentTime},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(description)">
		        		description = #{description},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(status)">
		        		status = #{status},
		        	</if>
		        	
		        	
	        </set>
        WHERE 
	        id = #{id} 
			<if test="@Ognl@isNotNull(modified)">
		      and 
   			modified = #{modified}
		    </if>
   
	</update>

    <delete id="MaintainOrder.delete">
    <![CDATA[
        DELETE FROM t_maintain_order 
        WHERE
        id = #{id} 
    ]]>
    </delete>
    <delete id="MaintainOrder.deleteMultiple">

        DELETE FROM t_maintain_order 
        WHERE
        	id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="MaintainOrder.getById" resultMap="MaintainOrder.RM">
		SELECT 
		<include refid="MaintainOrder.columns" />
	    <![CDATA[
		    FROM t_maintain_order as t_maintain_order
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="MaintainOrder.getByMultipleId" resultMap="MaintainOrder.RM">
		SELECT 
		<include refid="MaintainOrder.columns" />
		    FROM t_maintain_order as t_maintain_order
	        WHERE 
		       id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="MaintainOrder.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND t_maintain_order.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND t_maintain_order.id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND t_maintain_order.id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND t_maintain_order.id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND t_maintain_order.id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND t_maintain_order.id &lt;= #{idLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(idList)">
				AND t_maintain_order.id in
				<foreach collection="idList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(idNotEqList)">
				AND t_maintain_order.id not in
				<foreach collection="idNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
			<if test="@Ognl@isNotEmpty(userId)">
				AND t_maintain_order.user_id = #{userId}
			</if>
			<if test="@Ognl@isNotEmpty(userIdNotEq)">
				AND t_maintain_order.user_id &lt;&gt; #{userIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(userIdGT)">
				AND t_maintain_order.user_id &gt; #{userIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(userIdLT)">
				AND t_maintain_order.user_id &lt; #{userIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(userIdGE)">
				AND t_maintain_order.user_id &gt;= #{userIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(userIdLE)">
				AND t_maintain_order.user_id &lt;= #{userIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(userIdList)">
				AND t_maintain_order.user_id in
				<foreach collection="userIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(userIdNotEqList)">
				AND t_maintain_order.user_id not in
				<foreach collection="userIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
	       <if test="@Ognl@isNotEmpty(appointmentTimeBegin)">
				AND t_maintain_order.appointment_time &gt;= #{appointmentTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(appointmentTimeEnd)">
				AND t_maintain_order.appointment_time &lt;= #{appointmentTimeEnd}
		   </if>
		   <if test="@Ognl@isNotEmpty(description)">
				AND t_maintain_order.description = #{description}
			</if>
			<if test="@Ognl@isNotEmpty(descriptionLike)">
				AND t_maintain_order.description like CONCAT('%', CONVERT(#{descriptionLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(descriptionBeginLike)">
				AND t_maintain_order.description like CONCAT('', CONVERT(#{descriptionBeginLike}, char) ,'%') 
			</if>
			<if test="@Ognl@isNotEmpty(descriptionEndLike)">
				AND t_maintain_order.description like CONCAT('%', CONVERT(#{descriptionEndLike}, char) ,'') 
			</if>
			<if test="@Ognl@isNotEmpty(status)">
				AND t_maintain_order.status = #{status}
			</if>
			<if test="@Ognl@isNotEmpty(statusNotEq)">
				AND t_maintain_order.status &lt;&gt; #{statusNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(statusGT)">
				AND t_maintain_order.status &gt; #{statusGT}
			</if>
			<if test="@Ognl@isNotEmpty(statusLT)">
				AND t_maintain_order.status &lt; #{statusLT}
			</if>
			<if test="@Ognl@isNotEmpty(statusGE)">
				AND t_maintain_order.status &gt;= #{statusGE}
			</if>
			<if test="@Ognl@isNotEmpty(statusLE)">
				AND t_maintain_order.status &lt;= #{statusLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(statusList)">
				AND t_maintain_order.status in
				<foreach collection="statusList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(statusNotEqList)">
				AND t_maintain_order.status not in
				<foreach collection="statusNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
	       <if test="@Ognl@isNotEmpty(modifiedBegin)">
				AND t_maintain_order.modified &gt;= #{modifiedBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(modifiedEnd)">
				AND t_maintain_order.modified &lt;= #{modifiedEnd}
		   </if>
		</where>
	</sql>
		
    <select id="MaintainOrder.findPage.count" resultType="long">
        SELECT count(*) FROM t_maintain_order as t_maintain_order 
		<include refid="MaintainOrder.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="MaintainOrder.findPage" resultMap="MaintainOrder.RM">
    	SELECT 
    	<include refid="MaintainOrder.columns" />
	    FROM t_maintain_order as t_maintain_order 
		<include refid="MaintainOrder.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="MaintainOrder.findList" resultMap="MaintainOrder.RM">
    	SELECT 
    	<include refid="MaintainOrder.columns" />
	     FROM t_maintain_order as t_maintain_order 
		<include refid="MaintainOrder.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="MaintainOrder.loadOrderDaysInfo" resultType="java.util.HashMap">
		select appointment_time ,count(id) as cnt from t_maintain_order group by appointment_time 
		having appointment_time &lt;= DATE_ADD(now(),INTERVAL 7+7*#{nexts} DAY) AND
		appointment_time &gt; DATE_ADD(now(),INTERVAL 0+7*#{nexts} DAY)
	
	</select>
	
	<select id="MaintainOrder.loadOrderDayList" resultType="java.lang.String">
		select appointment_time from t_maintain_order where user_id=#{userId} group by appointment_time 
	
	</select>

	
	<select id="MaintainOrder.getByDate" resultMap="MaintainOrder.RM">
		SELECT 
    	<include refid="MaintainOrder.columns" />
	     FROM t_maintain_order as t_maintain_order 
		where appointment_time = #{date} limit 1;
	
	</select>
	
</mapper>

