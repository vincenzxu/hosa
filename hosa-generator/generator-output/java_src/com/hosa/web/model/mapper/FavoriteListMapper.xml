<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="FavoriteList">

	<resultMap id="FavoriteList.RM" type="com.hosa.web.model.FavoriteList">
        <result property="id" column="id"/>        
        
        <result property="favoriteListId" column="favorite_list_id"/>        
        
        <result property="imageId" column="image_id"/>        
        
        <result property="createdAt" column="created_at"/>        
        
	</resultMap>
	
	<sql id="FavoriteList.get.columns">
			 t_favorite_list.id
			, t_favorite_list.favorite_list_id
			, t_favorite_list.image_id
			, t_favorite_list.created_at
	</sql>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="FavoriteList.query.columns">
			 t_favorite_list.id
			
			<if test="@Ognl@isTrue(favoriteListIdQueryShow)  or @Ognl@isTrue(queryShowAll)">
			, t_favorite_list.favorite_list_id
			</if>
			<if test="@Ognl@isTrue(imageIdQueryShow)  or @Ognl@isTrue(queryShowAll)">
			, t_favorite_list.image_id
			</if>
			<if test="@Ognl@isTrue(createdAtQueryShow)  or @Ognl@isTrue(queryShowAll)">
			, t_favorite_list.created_at
			</if>
	</sql>
	
	
	<sql id="FavoriteList.query.advanced.columns">
	  
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="FavoriteList.insert" useGeneratedKeys="true" keyProperty="id">
   
        INSERT INTO t_favorite_list (
	        	id
		     	<if test="@Ognl@isNotNull(favoriteListId)">
		        	,favorite_list_id
		      	</if>
		     	<if test="@Ognl@isNotNull(imageId)">
		        	,image_id
		      	</if>
		     	<if test="@Ognl@isNotNull(createdAt)">
		        	,created_at
		      	</if>
        
        ) VALUES (
	        	#{id}
		     	<if test="@Ognl@isNotNull(favoriteListId)">
		        	,#{favoriteListId}
		      	</if>
		     	<if test="@Ognl@isNotNull(imageId)">
		        	,#{imageId}
		      	</if>
		     	<if test="@Ognl@isNotNull(createdAt)">
		        	,#{createdAt}
		      	</if>
        )
    
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="FavoriteList.update" >
    
        UPDATE t_favorite_list 
			<set>
		        <if test="@Ognl@isNotNull(favoriteListId)">
		        		favorite_list_id = #{favoriteListId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(imageId)">
		        		image_id = #{imageId},
		        	</if>
		        	
		        <if test="@Ognl@isNotNull(createdAt)">
		        		created_at = #{createdAt},
		        	</if>
		        	
	        </set>
        WHERE 
	        id = #{id} 
   
	</update>

    <delete id="FavoriteList.delete">
    <![CDATA[
        DELETE FROM t_favorite_list 
        WHERE
        id = #{id} 
    ]]>
    </delete>
    <delete id="FavoriteList.deleteMultiple">

        DELETE FROM t_favorite_list 
        WHERE
        	id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
   
    </delete>
    <select id="FavoriteList.getById" resultMap="FavoriteList.RM">
		SELECT 
		<include refid="FavoriteList.get.columns" />
		
	    <![CDATA[
		    FROM t_favorite_list as t_favorite_list
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="FavoriteList.getByMultipleId" resultMap="FavoriteList.RM">
		SELECT 
		<include refid="FavoriteList.get.columns" />
		
		    FROM t_favorite_list as t_favorite_list
	        WHERE 
		       id in
        	<foreach collection="list" item="id" index="index" open="(" close=")" separator="," >
#{id}			</foreach>
          
	</select>
	
	<sql id="FavoriteList.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND t_favorite_list.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND t_favorite_list.id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND t_favorite_list.id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND t_favorite_list.id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND t_favorite_list.id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND t_favorite_list.id &lt;= #{idLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(idList)">
				AND t_favorite_list.id in
				<foreach collection="idList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(idNotEqList)">
				AND t_favorite_list.id not in
				<foreach collection="idNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>

			<if test="@Ognl@isNotEmpty(favoriteListId)">
				AND t_favorite_list.favorite_list_id = #{favoriteListId}
			</if>
			<if test="@Ognl@isNotEmpty(favoriteListIdNotEq)">
				AND t_favorite_list.favorite_list_id &lt;&gt; #{favoriteListIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(favoriteListIdGT)">
				AND t_favorite_list.favorite_list_id &gt; #{favoriteListIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(favoriteListIdLT)">
				AND t_favorite_list.favorite_list_id &lt; #{favoriteListIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(favoriteListIdGE)">
				AND t_favorite_list.favorite_list_id &gt;= #{favoriteListIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(favoriteListIdLE)">
				AND t_favorite_list.favorite_list_id &lt;= #{favoriteListIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(favoriteListIdList)">
				AND t_favorite_list.favorite_list_id in
				<foreach collection="favoriteListIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(favoriteListIdNotEqList)">
				AND t_favorite_list.favorite_list_id not in
				<foreach collection="favoriteListIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>

			<if test="@Ognl@isNotEmpty(imageId)">
				AND t_favorite_list.image_id = #{imageId}
			</if>
			<if test="@Ognl@isNotEmpty(imageIdNotEq)">
				AND t_favorite_list.image_id &lt;&gt; #{imageIdNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(imageIdGT)">
				AND t_favorite_list.image_id &gt; #{imageIdGT}
			</if>
			<if test="@Ognl@isNotEmpty(imageIdLT)">
				AND t_favorite_list.image_id &lt; #{imageIdLT}
			</if>
			<if test="@Ognl@isNotEmpty(imageIdGE)">
				AND t_favorite_list.image_id &gt;= #{imageIdGE}
			</if>
			<if test="@Ognl@isNotEmpty(imageIdLE)">
				AND t_favorite_list.image_id &lt;= #{imageIdLE}
			</if>
	
			<if test="@Ognl@isNotEmpty(imageIdList)">
				AND t_favorite_list.image_id in
				<foreach collection="imageIdList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>
		   <if test="@Ognl@isNotEmpty(imageIdNotEqList)">
				AND t_favorite_list.image_id not in
				<foreach collection="imageIdNotEqList" item="id" index="index" open="(" close=")" separator="," >
#{id}				</foreach>
		   </if>

	       <if test="@Ognl@isNotEmpty(createdAtBegin)">
				AND t_favorite_list.created_at &gt;= #{createdAtBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createdAtEnd)">
				AND t_favorite_list.created_at &lt;= #{createdAtEnd}
		   </if>

		</where>
	</sql>
		
    <select id="FavoriteList.findPage.count" resultType="long">
        SELECT count(*) FROM t_favorite_list as t_favorite_list 
		<include refid="FavoriteList.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="FavoriteList.findPage" resultMap="FavoriteList.RM">
    	SELECT 
    	<include refid="FavoriteList.query.columns" />
    	<include refid="FavoriteList.query.advanced.columns" />
    	
	    FROM t_favorite_list as t_favorite_list 
		<include refid="FavoriteList.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="FavoriteList.findList" resultMap="FavoriteList.RM">
    	SELECT 
    	<include refid="FavoriteList.query.columns" />
    	<include refid="FavoriteList.query.advanced.columns" />
    	
	     FROM t_favorite_list as t_favorite_list 
		<include refid="FavoriteList.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	
	
	
	
</mapper>

